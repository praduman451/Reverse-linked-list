#include<stdio.h>
#include<stdlib.h>

struct Node
{
  int data;
  struct Node* next;
};

void forwardPrint(struct Node* head)
{
  if (head == NULL)
    return;

  printf("%d ", head->data);
  forwardPrint(head->next);
}

void insertEnd(struct Node** head, int data)
{
  struct Node* node = (struct Node*) malloc(sizeof(struct Node));
  struct Node *last = *head;
  node->data  = data;     //  Insert data in new node
  node->next = NULL;   // link new node to NULL as it is last node
  if (*head == NULL)  // if list is empty add in beginning.
  {
    *head = node;
    return;
  }
  while (last->next != NULL)  // Find the last node
    last = last->next;
  last->next = node;  // Add the node after the last node of list
  return;
}

struct Node* reverseList(struct Node* head) 
{
   struct Node *p,*q,*r;
p=head;
q=NULL;
while (p) {
r=p->next;
p->next=q;
q=p;
p=r;

}
head=q;
return head;
}

int main()
{
  int t,n,m;
  scanf("%d",&t);
  while(t--)
  {
    struct Node* head = NULL;
    struct Node* newHead;
    scanf("%d",&n);
    while(n--)
    {
      scanf("%d",&m);
      insertEnd(&head, m);
    }
    newHead = reverseList(head);
    forwardPrint(newHead);
    printf("\n");
  }
  return 0;
}
